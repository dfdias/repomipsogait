|datapath
clk => pc:pc.clk
clk => imemory:IMemory.clk
clk => registers:registers.clk
clk => dmemory:data_memory.clk
rst => pc:pc.rst
EnPC => pc:pc.EN
RegWr => registers:registers.WE
RegDst => mux:wa_mux.sel
AluSrc => mux:alu_mux.sel
MemtoReg => mux:mem2reg.sel
MemWr => dmemory:data_memory.WE
RI => imemory:IMemory.EN
AluOp[0] => alu:alu.aluOp[0]
AluOp[1] => alu:alu.aluOp[1]
AluOp[2] => alu:alu.aluOp[2]
AluOp[3] => alu:alu.aluOp[3]
inst[0] <= imemory:IMemory.RD[0]
inst[1] <= imemory:IMemory.RD[1]
inst[2] <= imemory:IMemory.RD[2]
inst[3] <= imemory:IMemory.RD[3]
inst[4] <= imemory:IMemory.RD[4]
inst[5] <= imemory:IMemory.RD[5]
inst[6] <= imemory:IMemory.RD[6]
inst[7] <= imemory:IMemory.RD[7]
inst[8] <= imemory:IMemory.RD[8]
inst[9] <= imemory:IMemory.RD[9]
inst[10] <= imemory:IMemory.RD[10]
inst[11] <= imemory:IMemory.RD[11]
inst[12] <= imemory:IMemory.RD[12]
inst[13] <= imemory:IMemory.RD[13]
inst[14] <= imemory:IMemory.RD[14]
inst[15] <= imemory:IMemory.RD[15]


|datapath|pc:pc
rst => addr[0].ACLR
rst => addr[1].ACLR
rst => addr[2].ACLR
rst => addr[3].ACLR
rst => addr[4].ACLR
rst => addr[5].ACLR
rst => addr[6].ACLR
rst => addr[7].ACLR
clk => addr[0].CLK
clk => addr[1].CLK
clk => addr[2].CLK
clk => addr[3].CLK
clk => addr[4].CLK
clk => addr[5].CLK
clk => addr[6].CLK
clk => addr[7].CLK
EN => addr[7].ENA
EN => addr[6].ENA
EN => addr[5].ENA
EN => addr[4].ENA
EN => addr[3].ENA
EN => addr[2].ENA
EN => addr[1].ENA
EN => addr[0].ENA
Cnt[0] <= addr[0].DB_MAX_OUTPUT_PORT_TYPE
Cnt[1] <= addr[1].DB_MAX_OUTPUT_PORT_TYPE
Cnt[2] <= addr[2].DB_MAX_OUTPUT_PORT_TYPE
Cnt[3] <= addr[3].DB_MAX_OUTPUT_PORT_TYPE
Cnt[4] <= addr[4].DB_MAX_OUTPUT_PORT_TYPE
Cnt[5] <= addr[5].DB_MAX_OUTPUT_PORT_TYPE
Cnt[6] <= addr[6].DB_MAX_OUTPUT_PORT_TYPE
Cnt[7] <= addr[7].DB_MAX_OUTPUT_PORT_TYPE


|datapath|IMemory:IMemory
clk => RD[0]~reg0.CLK
clk => RD[1]~reg0.CLK
clk => RD[2]~reg0.CLK
clk => RD[3]~reg0.CLK
clk => RD[4]~reg0.CLK
clk => RD[5]~reg0.CLK
clk => RD[6]~reg0.CLK
clk => RD[7]~reg0.CLK
clk => RD[8]~reg0.CLK
clk => RD[9]~reg0.CLK
clk => RD[10]~reg0.CLK
clk => RD[11]~reg0.CLK
clk => RD[12]~reg0.CLK
clk => RD[13]~reg0.CLK
clk => RD[14]~reg0.CLK
clk => RD[15]~reg0.CLK
EN => RD[1]~reg0.ENA
EN => RD[0]~reg0.ENA
EN => RD[2]~reg0.ENA
EN => RD[3]~reg0.ENA
EN => RD[4]~reg0.ENA
EN => RD[5]~reg0.ENA
EN => RD[6]~reg0.ENA
EN => RD[7]~reg0.ENA
EN => RD[8]~reg0.ENA
EN => RD[9]~reg0.ENA
EN => RD[10]~reg0.ENA
EN => RD[11]~reg0.ENA
EN => RD[12]~reg0.ENA
EN => RD[13]~reg0.ENA
EN => RD[14]~reg0.ENA
EN => RD[15]~reg0.ENA
RA[0] => Mux2.IN10
RA[0] => Mux4.IN10
RA[0] => Mux5.IN10
RA[0] => Mux6.IN10
RA[0] => Mux7.IN10
RA[0] => Mux8.IN10
RA[0] => Mux9.IN10
RA[0] => Mux10.IN10
RA[0] => Mux11.IN10
RA[1] => Mux0.IN5
RA[1] => Mux1.IN5
RA[1] => Mux2.IN9
RA[1] => Mux3.IN5
RA[1] => Mux4.IN9
RA[1] => Mux5.IN9
RA[1] => Mux6.IN9
RA[1] => Mux7.IN9
RA[1] => Mux8.IN9
RA[1] => Mux9.IN9
RA[1] => Mux10.IN9
RA[1] => Mux11.IN9
RA[2] => Mux0.IN4
RA[2] => Mux1.IN4
RA[2] => Mux2.IN8
RA[2] => Mux3.IN4
RA[2] => Mux4.IN8
RA[2] => Mux5.IN8
RA[2] => Mux6.IN8
RA[2] => Mux7.IN8
RA[2] => Mux8.IN8
RA[2] => Mux9.IN8
RA[2] => Mux10.IN8
RA[2] => Mux11.IN8
RA[2] => RD[1]~reg0.DATAIN
RA[3] => ~NO_FANOUT~
RA[4] => ~NO_FANOUT~
RA[5] => ~NO_FANOUT~
RA[6] => ~NO_FANOUT~
RA[7] => ~NO_FANOUT~
RD[0] <= RD[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[1] <= RD[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[2] <= RD[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[3] <= RD[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[4] <= RD[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[5] <= RD[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[6] <= RD[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[7] <= RD[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[8] <= RD[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[9] <= RD[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[10] <= RD[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[11] <= RD[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[12] <= RD[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[13] <= RD[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[14] <= RD[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RD[15] <= RD[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|datapath|signal_extender:SIG_EXTENDER
unext[0] => extended[0].DATAIN
unext[1] => extended[1].DATAIN
unext[2] => extended[2].DATAIN
unext[3] => extended[3].DATAIN
unext[4] => extended[4].DATAIN
unext[5] => extended[5].DATAIN
unext[6] => extended[6].DATAIN
extended[0] <= unext[0].DB_MAX_OUTPUT_PORT_TYPE
extended[1] <= unext[1].DB_MAX_OUTPUT_PORT_TYPE
extended[2] <= unext[2].DB_MAX_OUTPUT_PORT_TYPE
extended[3] <= unext[3].DB_MAX_OUTPUT_PORT_TYPE
extended[4] <= unext[4].DB_MAX_OUTPUT_PORT_TYPE
extended[5] <= unext[5].DB_MAX_OUTPUT_PORT_TYPE
extended[6] <= unext[6].DB_MAX_OUTPUT_PORT_TYPE
extended[7] <= <GND>


|datapath|mux:wa_mux
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
input0[0] => muxOut.DATAB
input0[1] => muxOut.DATAB
input0[2] => muxOut.DATAB
input1[0] => muxOut.DATAA
input1[1] => muxOut.DATAA
input1[2] => muxOut.DATAA
muxOut[0] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[1] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[2] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|datapath|registers:registers
clk => s_ram~11.CLK
clk => s_ram~0.CLK
clk => s_ram~1.CLK
clk => s_ram~2.CLK
clk => s_ram~3.CLK
clk => s_ram~4.CLK
clk => s_ram~5.CLK
clk => s_ram~6.CLK
clk => s_ram~7.CLK
clk => s_ram~8.CLK
clk => s_ram~9.CLK
clk => s_ram~10.CLK
clk => s_ram.CLK0
RA1[0] => s_ram.RADDR
RA1[1] => s_ram.RADDR1
RA1[2] => s_ram.RADDR2
RA2[0] => s_ram.PORTBRADDR
RA2[1] => s_ram.PORTBRADDR1
RA2[2] => s_ram.PORTBRADDR2
RD1[0] <= s_ram.DATAOUT
RD1[1] <= s_ram.DATAOUT1
RD1[2] <= s_ram.DATAOUT2
RD1[3] <= s_ram.DATAOUT3
RD1[4] <= s_ram.DATAOUT4
RD1[5] <= s_ram.DATAOUT5
RD1[6] <= s_ram.DATAOUT6
RD1[7] <= s_ram.DATAOUT7
RD2[0] <= s_ram.PORTBDATAOUT
RD2[1] <= s_ram.PORTBDATAOUT1
RD2[2] <= s_ram.PORTBDATAOUT2
RD2[3] <= s_ram.PORTBDATAOUT3
RD2[4] <= s_ram.PORTBDATAOUT4
RD2[5] <= s_ram.PORTBDATAOUT5
RD2[6] <= s_ram.PORTBDATAOUT6
RD2[7] <= s_ram.PORTBDATAOUT7
WA[0] => s_ram~2.DATAIN
WA[0] => s_ram.WADDR
WA[1] => s_ram~1.DATAIN
WA[1] => s_ram.WADDR1
WA[2] => s_ram~0.DATAIN
WA[2] => s_ram.WADDR2
WD[0] => s_ram~10.DATAIN
WD[0] => s_ram.DATAIN
WD[1] => s_ram~9.DATAIN
WD[1] => s_ram.DATAIN1
WD[2] => s_ram~8.DATAIN
WD[2] => s_ram.DATAIN2
WD[3] => s_ram~7.DATAIN
WD[3] => s_ram.DATAIN3
WD[4] => s_ram~6.DATAIN
WD[4] => s_ram.DATAIN4
WD[5] => s_ram~5.DATAIN
WD[5] => s_ram.DATAIN5
WD[6] => s_ram~4.DATAIN
WD[6] => s_ram.DATAIN6
WD[7] => s_ram~3.DATAIN
WD[7] => s_ram.DATAIN7
WE => s_ram~11.DATAIN
WE => s_ram.WE


|datapath|mux:alu_mux
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
input0[0] => muxOut.DATAB
input0[1] => muxOut.DATAB
input0[2] => muxOut.DATAB
input0[3] => muxOut.DATAB
input0[4] => muxOut.DATAB
input0[5] => muxOut.DATAB
input0[6] => muxOut.DATAB
input0[7] => muxOut.DATAB
input1[0] => muxOut.DATAA
input1[1] => muxOut.DATAA
input1[2] => muxOut.DATAA
input1[3] => muxOut.DATAA
input1[4] => muxOut.DATAA
input1[5] => muxOut.DATAA
input1[6] => muxOut.DATAA
input1[7] => muxOut.DATAA
muxOut[0] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[1] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[2] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[3] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[4] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[5] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[6] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[7] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|datapath|alu:alu
aluOp[0] => Equal0.IN3
aluOp[0] => Equal1.IN3
aluOp[0] => Equal2.IN2
aluOp[0] => Equal3.IN3
aluOp[0] => Equal4.IN2
aluOp[0] => Equal5.IN3
aluOp[0] => Equal6.IN1
aluOp[0] => Equal7.IN3
aluOp[0] => Equal8.IN2
aluOp[0] => Equal9.IN3
aluOp[0] => Equal10.IN1
aluOp[0] => Equal11.IN3
aluOp[0] => Equal13.IN1
aluOp[0] => Equal14.IN3
aluOp[0] => Equal15.IN0
aluOp[0] => Equal16.IN3
aluOp[1] => Equal0.IN2
aluOp[1] => Equal1.IN2
aluOp[1] => Equal2.IN3
aluOp[1] => Equal3.IN2
aluOp[1] => Equal4.IN1
aluOp[1] => Equal5.IN1
aluOp[1] => Equal6.IN3
aluOp[1] => Equal7.IN2
aluOp[1] => Equal8.IN1
aluOp[1] => Equal9.IN1
aluOp[1] => Equal10.IN3
aluOp[1] => Equal11.IN2
aluOp[1] => Equal13.IN0
aluOp[1] => Equal14.IN0
aluOp[1] => Equal15.IN3
aluOp[1] => Equal16.IN2
aluOp[2] => Equal0.IN1
aluOp[2] => Equal1.IN1
aluOp[2] => Equal2.IN1
aluOp[2] => Equal3.IN1
aluOp[2] => Equal4.IN3
aluOp[2] => Equal5.IN2
aluOp[2] => Equal6.IN2
aluOp[2] => Equal7.IN1
aluOp[2] => Equal8.IN0
aluOp[2] => Equal9.IN0
aluOp[2] => Equal10.IN0
aluOp[2] => Equal11.IN0
aluOp[2] => Equal13.IN3
aluOp[2] => Equal14.IN2
aluOp[2] => Equal15.IN2
aluOp[2] => Equal16.IN1
aluOp[3] => Equal0.IN0
aluOp[3] => Equal1.IN0
aluOp[3] => Equal2.IN0
aluOp[3] => Equal3.IN0
aluOp[3] => Equal4.IN0
aluOp[3] => Equal5.IN0
aluOp[3] => Equal6.IN0
aluOp[3] => Equal7.IN0
aluOp[3] => Equal8.IN3
aluOp[3] => Equal9.IN2
aluOp[3] => Equal10.IN2
aluOp[3] => Equal11.IN1
aluOp[3] => Equal13.IN2
aluOp[3] => Equal14.IN1
aluOp[3] => Equal15.IN1
aluOp[3] => Equal16.IN0
op1[0] => Add0.IN8
op1[0] => Add1.IN16
op1[0] => s_result.IN0
op1[0] => s_result.IN0
op1[0] => s_result.IN0
op1[0] => s_result.IN0
op1[0] => Mult0.IN7
op1[0] => Mult1.IN7
op1[0] => ShiftLeft0.IN8
op1[0] => ShiftRight0.IN8
op1[0] => ShiftRight1.IN8
op1[0] => Equal12.IN7
op1[0] => LessThan0.IN8
op1[0] => LessThan1.IN8
op1[0] => LessThan2.IN8
op1[0] => LessThan3.IN8
op1[1] => Add0.IN7
op1[1] => Add1.IN15
op1[1] => s_result.IN0
op1[1] => s_result.IN0
op1[1] => s_result.IN0
op1[1] => s_result.IN0
op1[1] => Mult0.IN6
op1[1] => Mult1.IN6
op1[1] => ShiftLeft0.IN7
op1[1] => ShiftRight0.IN7
op1[1] => ShiftRight1.IN7
op1[1] => Equal12.IN6
op1[1] => LessThan0.IN7
op1[1] => LessThan1.IN7
op1[1] => LessThan2.IN7
op1[1] => LessThan3.IN7
op1[2] => Add0.IN6
op1[2] => Add1.IN14
op1[2] => s_result.IN0
op1[2] => s_result.IN0
op1[2] => s_result.IN0
op1[2] => s_result.IN0
op1[2] => Mult0.IN5
op1[2] => Mult1.IN5
op1[2] => ShiftLeft0.IN6
op1[2] => ShiftRight0.IN6
op1[2] => ShiftRight1.IN6
op1[2] => Equal12.IN5
op1[2] => LessThan0.IN6
op1[2] => LessThan1.IN6
op1[2] => LessThan2.IN6
op1[2] => LessThan3.IN6
op1[3] => Add0.IN5
op1[3] => Add1.IN13
op1[3] => s_result.IN0
op1[3] => s_result.IN0
op1[3] => s_result.IN0
op1[3] => s_result.IN0
op1[3] => Mult0.IN4
op1[3] => Mult1.IN4
op1[3] => ShiftLeft0.IN5
op1[3] => ShiftRight0.IN5
op1[3] => ShiftRight1.IN5
op1[3] => Equal12.IN4
op1[3] => LessThan0.IN5
op1[3] => LessThan1.IN5
op1[3] => LessThan2.IN5
op1[3] => LessThan3.IN5
op1[4] => Add0.IN4
op1[4] => Add1.IN12
op1[4] => s_result.IN0
op1[4] => s_result.IN0
op1[4] => s_result.IN0
op1[4] => s_result.IN0
op1[4] => Mult0.IN3
op1[4] => Mult1.IN3
op1[4] => ShiftLeft0.IN4
op1[4] => ShiftRight0.IN4
op1[4] => ShiftRight1.IN4
op1[4] => Equal12.IN3
op1[4] => LessThan0.IN4
op1[4] => LessThan1.IN4
op1[4] => LessThan2.IN4
op1[4] => LessThan3.IN4
op1[5] => Add0.IN3
op1[5] => Add1.IN11
op1[5] => s_result.IN0
op1[5] => s_result.IN0
op1[5] => s_result.IN0
op1[5] => s_result.IN0
op1[5] => Mult0.IN2
op1[5] => Mult1.IN2
op1[5] => ShiftLeft0.IN3
op1[5] => ShiftRight0.IN3
op1[5] => ShiftRight1.IN3
op1[5] => Equal12.IN2
op1[5] => LessThan0.IN3
op1[5] => LessThan1.IN3
op1[5] => LessThan2.IN3
op1[5] => LessThan3.IN3
op1[6] => Add0.IN2
op1[6] => Add1.IN10
op1[6] => s_result.IN0
op1[6] => s_result.IN0
op1[6] => s_result.IN0
op1[6] => s_result.IN0
op1[6] => Mult0.IN1
op1[6] => Mult1.IN1
op1[6] => ShiftLeft0.IN2
op1[6] => ShiftRight0.IN2
op1[6] => ShiftRight1.IN2
op1[6] => Equal12.IN1
op1[6] => LessThan0.IN2
op1[6] => LessThan1.IN2
op1[6] => LessThan2.IN2
op1[6] => LessThan3.IN2
op1[7] => Add0.IN1
op1[7] => Add1.IN9
op1[7] => s_result.IN0
op1[7] => s_result.IN0
op1[7] => s_result.IN0
op1[7] => s_result.IN0
op1[7] => Mult0.IN0
op1[7] => Mult1.IN0
op1[7] => ShiftLeft0.IN1
op1[7] => ShiftRight0.IN1
op1[7] => ShiftRight1.IN0
op1[7] => ShiftRight1.IN1
op1[7] => Equal12.IN0
op1[7] => LessThan0.IN1
op1[7] => LessThan1.IN1
op1[7] => LessThan2.IN1
op1[7] => LessThan3.IN1
op2[0] => Add0.IN16
op2[0] => s_result.IN1
op2[0] => s_result.IN1
op2[0] => s_result.IN1
op2[0] => s_result.IN1
op2[0] => Mult0.IN15
op2[0] => Mult1.IN15
op2[0] => ShiftLeft0.IN16
op2[0] => ShiftRight0.IN16
op2[0] => ShiftRight1.IN16
op2[0] => Equal12.IN15
op2[0] => LessThan0.IN16
op2[0] => LessThan1.IN16
op2[0] => LessThan2.IN16
op2[0] => LessThan3.IN16
op2[0] => Add1.IN8
op2[1] => Add0.IN15
op2[1] => s_result.IN1
op2[1] => s_result.IN1
op2[1] => s_result.IN1
op2[1] => s_result.IN1
op2[1] => Mult0.IN14
op2[1] => Mult1.IN14
op2[1] => ShiftLeft0.IN15
op2[1] => ShiftRight0.IN15
op2[1] => ShiftRight1.IN15
op2[1] => Equal12.IN14
op2[1] => LessThan0.IN15
op2[1] => LessThan1.IN15
op2[1] => LessThan2.IN15
op2[1] => LessThan3.IN15
op2[1] => Add1.IN7
op2[2] => Add0.IN14
op2[2] => s_result.IN1
op2[2] => s_result.IN1
op2[2] => s_result.IN1
op2[2] => s_result.IN1
op2[2] => Mult0.IN13
op2[2] => Mult1.IN13
op2[2] => ShiftLeft0.IN14
op2[2] => ShiftRight0.IN14
op2[2] => ShiftRight1.IN14
op2[2] => Equal12.IN13
op2[2] => LessThan0.IN14
op2[2] => LessThan1.IN14
op2[2] => LessThan2.IN14
op2[2] => LessThan3.IN14
op2[2] => Add1.IN6
op2[3] => Add0.IN13
op2[3] => s_result.IN1
op2[3] => s_result.IN1
op2[3] => s_result.IN1
op2[3] => s_result.IN1
op2[3] => Mult0.IN12
op2[3] => Mult1.IN12
op2[3] => ShiftLeft0.IN13
op2[3] => ShiftRight0.IN13
op2[3] => ShiftRight1.IN13
op2[3] => Equal12.IN12
op2[3] => LessThan0.IN13
op2[3] => LessThan1.IN13
op2[3] => LessThan2.IN13
op2[3] => LessThan3.IN13
op2[3] => Add1.IN5
op2[4] => Add0.IN12
op2[4] => s_result.IN1
op2[4] => s_result.IN1
op2[4] => s_result.IN1
op2[4] => s_result.IN1
op2[4] => Mult0.IN11
op2[4] => Mult1.IN11
op2[4] => ShiftLeft0.IN12
op2[4] => ShiftRight0.IN12
op2[4] => ShiftRight1.IN12
op2[4] => Equal12.IN11
op2[4] => LessThan0.IN12
op2[4] => LessThan1.IN12
op2[4] => LessThan2.IN12
op2[4] => LessThan3.IN12
op2[4] => Add1.IN4
op2[5] => Add0.IN11
op2[5] => s_result.IN1
op2[5] => s_result.IN1
op2[5] => s_result.IN1
op2[5] => s_result.IN1
op2[5] => Mult0.IN10
op2[5] => Mult1.IN10
op2[5] => ShiftLeft0.IN11
op2[5] => ShiftRight0.IN11
op2[5] => ShiftRight1.IN11
op2[5] => Equal12.IN10
op2[5] => LessThan0.IN11
op2[5] => LessThan1.IN11
op2[5] => LessThan2.IN11
op2[5] => LessThan3.IN11
op2[5] => Add1.IN3
op2[6] => Add0.IN10
op2[6] => s_result.IN1
op2[6] => s_result.IN1
op2[6] => s_result.IN1
op2[6] => s_result.IN1
op2[6] => Mult0.IN9
op2[6] => Mult1.IN9
op2[6] => ShiftLeft0.IN10
op2[6] => ShiftRight0.IN10
op2[6] => ShiftRight1.IN10
op2[6] => Equal12.IN9
op2[6] => LessThan0.IN10
op2[6] => LessThan1.IN10
op2[6] => LessThan2.IN10
op2[6] => LessThan3.IN10
op2[6] => Add1.IN2
op2[7] => Add0.IN9
op2[7] => s_result.IN1
op2[7] => s_result.IN1
op2[7] => s_result.IN1
op2[7] => s_result.IN1
op2[7] => Mult0.IN8
op2[7] => Mult1.IN8
op2[7] => ShiftLeft0.IN9
op2[7] => ShiftRight0.IN9
op2[7] => ShiftRight1.IN9
op2[7] => Equal12.IN8
op2[7] => LessThan0.IN9
op2[7] => LessThan1.IN9
op2[7] => LessThan2.IN9
op2[7] => LessThan3.IN9
op2[7] => Add1.IN1
result[0] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= s_result.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= s_result.DB_MAX_OUTPUT_PORT_TYPE


|datapath|mux:mem2reg
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
sel => muxOut.OUTPUTSELECT
input0[0] => muxOut.DATAB
input0[1] => muxOut.DATAB
input0[2] => muxOut.DATAB
input0[3] => muxOut.DATAB
input0[4] => muxOut.DATAB
input0[5] => muxOut.DATAB
input0[6] => muxOut.DATAB
input0[7] => muxOut.DATAB
input1[0] => muxOut.DATAA
input1[1] => muxOut.DATAA
input1[2] => muxOut.DATAA
input1[3] => muxOut.DATAA
input1[4] => muxOut.DATAA
input1[5] => muxOut.DATAA
input1[6] => muxOut.DATAA
input1[7] => muxOut.DATAA
muxOut[0] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[1] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[2] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[3] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[4] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[5] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[6] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE
muxOut[7] <= muxOut.DB_MAX_OUTPUT_PORT_TYPE


|datapath|DMemory:data_memory
clk => s_ram~16.CLK
clk => s_ram~0.CLK
clk => s_ram~1.CLK
clk => s_ram~2.CLK
clk => s_ram~3.CLK
clk => s_ram~4.CLK
clk => s_ram~5.CLK
clk => s_ram~6.CLK
clk => s_ram~7.CLK
clk => s_ram~8.CLK
clk => s_ram~9.CLK
clk => s_ram~10.CLK
clk => s_ram~11.CLK
clk => s_ram~12.CLK
clk => s_ram~13.CLK
clk => s_ram~14.CLK
clk => s_ram~15.CLK
clk => s_ram.CLK0
Addr[0] => s_ram~7.DATAIN
Addr[0] => s_ram.WADDR
Addr[0] => s_ram.RADDR
Addr[1] => s_ram~6.DATAIN
Addr[1] => s_ram.WADDR1
Addr[1] => s_ram.RADDR1
Addr[2] => s_ram~5.DATAIN
Addr[2] => s_ram.WADDR2
Addr[2] => s_ram.RADDR2
Addr[3] => s_ram~4.DATAIN
Addr[3] => s_ram.WADDR3
Addr[3] => s_ram.RADDR3
Addr[4] => s_ram~3.DATAIN
Addr[4] => s_ram.WADDR4
Addr[4] => s_ram.RADDR4
Addr[5] => s_ram~2.DATAIN
Addr[5] => s_ram.WADDR5
Addr[5] => s_ram.RADDR5
Addr[6] => s_ram~1.DATAIN
Addr[6] => s_ram.WADDR6
Addr[6] => s_ram.RADDR6
Addr[7] => s_ram~0.DATAIN
Addr[7] => s_ram.WADDR7
Addr[7] => s_ram.RADDR7
WD[0] => s_ram~15.DATAIN
WD[0] => s_ram.DATAIN
WD[1] => s_ram~14.DATAIN
WD[1] => s_ram.DATAIN1
WD[2] => s_ram~13.DATAIN
WD[2] => s_ram.DATAIN2
WD[3] => s_ram~12.DATAIN
WD[3] => s_ram.DATAIN3
WD[4] => s_ram~11.DATAIN
WD[4] => s_ram.DATAIN4
WD[5] => s_ram~10.DATAIN
WD[5] => s_ram.DATAIN5
WD[6] => s_ram~9.DATAIN
WD[6] => s_ram.DATAIN6
WD[7] => s_ram~8.DATAIN
WD[7] => s_ram.DATAIN7
WE => s_ram~16.DATAIN
WE => s_ram.WE
RD[0] <= s_ram.DATAOUT
RD[1] <= s_ram.DATAOUT1
RD[2] <= s_ram.DATAOUT2
RD[3] <= s_ram.DATAOUT3
RD[4] <= s_ram.DATAOUT4
RD[5] <= s_ram.DATAOUT5
RD[6] <= s_ram.DATAOUT6
RD[7] <= s_ram.DATAOUT7


